======PHASE 1 DESCRIPTIONS======

===HARDCODED DATA===
User.js:
users: a list of all users including admin, professors, and students
groups: a list of all groups, showing relations between group, professor, and students

QuizData.js:
ruleList: a list of raw questions data
quizList: a list of all quizzes generated by all professors

===ADMIN INSTRUCTION===
credential:
username: admin
password: admin

Log in as admin from the login page. The page consists of:
 1. A table showing all the users' information. Admin can click the 'edit' button to edit any info of any users and click the 'apply' button to apply those changes. Admin can also click the 'remove' button to remove any users. A total count of users is also included at the top-left corner.

 2. A field of 5 inputs that accept type-in value(with validation), an admin can click the 'add user' button to add a user.

 3. Any modification, creation, and deletion by admin will result in the update of the hardcoded user data (users) stored in Users.js.

 4. Log Out: Log out and return to the login page.

===PROFESSOR INSTRUCTION===
 credential:
 username: user3
 password: user3

 Log in as professor the login page. The page consists of:
 1. Homepage: a simple profile area showing info and instructing courses of this professor.

 2. Left-Sidebar consists of:
    2.1 Home: redirect to professor homepage

    2.2 Make Quiz: direct to the page for making and distributing quizzes:
        2.2.1 Professor can type in a quiz name in 'quiz name' input field (validation: no duplicated quiz name)
        2.2.2 Professor can type in and adjust time limit in 'time limit' input field (validation: integer >= 10)
        2.2.3 Professor can select a group (which he must instruct) as the target to send this quiz.
        2.2.4 Professor can add as many questions into this quiz as he wants, by clicking the 'Add question' below.
              For each new question, the professor can specify:
              2.2.4.1 Whether students can check UR (a hint)
              2.2.4.2 Whether students can check Phe (another hint)
              2.2.4.3 Maximum number of the set of additional contextual hints (much more hints!)
              2.2.4.4 The rule (the answer). This selection of rules is queried from hardcoded question data (rule list) in QuizData.js.
        2.2.5 After setting up a quiz, the professor can click the 'send quiz' button to send the quiz to the designated group.
        All students in the designated group will see a block (shows this quiz's name) which links to a 'Quiz Taker' that allows them to take this quiz.
        2.2.6 Any creation of quizzes will update hardcoded quiz data (quizList)in QuizData.js.

    2.3 Groups: direct to page for managing groups:
        Each group takes up 1 block consists of group name, list of students enrolled in this group and their info
        2.3.1 The hardcoded groups which belong to this professor will be loaded when direct to the Groups page.
        2.3.2 The professor can create an empty group by type in a group name(validation: no duplicated group name) and click the 'Add' icon to the right.
        2.3.3 The professor can delete any group by clicking the trash bin icon to the right of the group name.
        2.3.4 Professor can invite (in phase 1 it's auto-accepted) any students (validation: being a student and not enrolled in this group)
        by type in the students' username in the input field and click plus icon.
        to any group. And can delete any student in the group by clicking the trash bin icon to the right of this student.
        2.3.5 Any modification, creation, and deletion by the professor will result in the update of the hardcoded user data (users) in User.js and the hardcoded group data (groups) in User.js.

    2.4 Log Out: Log out and return to the login page.


=== STUDENT INSTRUCTION ===
 credentials:
 username: user | user1 | user2
 password: user | user1 | user2

 Log in as student the login page. The page consists of:
 1. Homepage: consists of:
    1.1. Student info and courses enrolled.
    1.2. Activity History: All the hardcoded past quizzes are loaded. Each past quiz takes up one block which links to the corresponding result page (showing quiz details e.g. score...) and can return to student main.
    1.3. Pending Quizzes: All the new quizzes are loaded. Each new quiz takes up one block which links to the corresponding Quiz Taker page.
    Students can now do the quiz with given questions, selectable hints, time limit counter, and multiple-choice style answering area.
    As a feature, the quiz jumps to the next question after the student clicks on one of the choices or directly ends after the timeout.
    When the quiz ends, a detailed result page regarding this quiz will be displayed. After student clicks 'back to the main page',
    the page redirected to the student homepage, and the quiz which just has been finished will be displayed in Activity History.

 2. Groups: consists of a list of this student's enrolled groups with:
    1. group name 2. professor info 3. groupmates info

 3. Practice: a DIY question exercise tool for student, which:
    3.1. student can specify the rule, # of questions, question type
    3.2. Students can apply special features regarding the generation of questions by changing 2 switches to the right.
    3.3 by clicking 'generate data', DIY questions will be displayed.

 4. Log Out: Log out and return to the login page.






